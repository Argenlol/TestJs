// Методы массивов. Домашняя работа.

// Группа С ======================================================
// Задание №1
// Дан массив:
// let task1 = [2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17];
// Создайте новый массив, в котором будут
// только положительные числа из массива arr.
// Используйте метод .filter()

// let arr = [2, 3, 5, 9, 8, -11, 6, 7, 47, 53, -1, -3, 17];
// let newArr = arr.filter(function(number) {
//     return number > 0
// });

// console.log(newArr);



// Задание №2
// Дан массив
// let task2 = [10, 25, 25, 15, 5, 10];
// Выведите в alert сумму элементов
// этого массива.
// Используйте метод .forEach()

// let number = [10, 25, 25, 15, 5, 10];
// let  numPlus = number.forEach((a, b ) => {
//     console.log(a + b); 
// });
// alert(numPlus)


// Задание №3
// 	Дан массив
// let task3 = [175, 50, 25];
// Вычтите числа в массиве начиная с начала и
// выведите результат в консоль.
// Например: 175-50-25=100
// Используйте метод .reduce()


// let task = [175, 50, 25];
// let result = task.reduce((a, b) => {
//     return (a - b );
// });

// console.log(result);

// Задание №4
// 	Напишите функцию, которая определяет
// максимальный элемент массива.
// Нельзя использовать .sort()!
// Массив для примера:
// let task4 = [4, 15, -4, 27, 12, 8];

// let task4 = [4, 15, -4, 27, 12, 8]
// let sorted = task4.reduce((o, v) => {
// var index = o.findIndex(el => el > v);
// return ((index > -1) ? o.splice(index, 0, v) : o.push(v)), o;
// }, []);
// console.log(sorted);
// let numBig = sorted.pop()
// console.log(numBig);


// Задание №5
// 	Напишите функцию, определяющую
// максимальное количество повторяющихся
//  элементов в массиве.
// Массив для примера:
// let task5 = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];


// let num1 = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];
// let newNum = num1.filter(item => item === 5).length
// console.log(newNum );

// let task5 = [4, 5, 5, 5, 3, 5, 2, 3, 1, 3, 4];
// let obj = {};
// task5.forEach((item) => {
//     if (obj[item]){
//         obj[item]++
//     }else{
//         obj[item] = 1
//     }
// })
// console.log(obj);


// Группа B=========================================================

// Задание №6
// Дан массив с числами. Создайте новый массив, состоящий из квадратов этих чисел
// Используйте forEach() и push()

// let arr = [5, 6, 7, 8, 9];
// let newArr = arr.map(function(elem) {
// 	return elem * elem;
// });
// alert(newArr);

// Задание №7
// Дан массив с числами. Проверьте то, что все элементы в массиве больше нуля.
// Используйте every()

// let arr = [5, 6, 7, 8, 9];
// function func(elem){return elem > 0};
// alert(arr.every(func)); 


// Задание №8
// Дан массив со строками. Оставьте в нем только те строки, длина которых больше 5-ти символов.
// Используйте метод filter()

// var arr = ['london', 'Usa', 'Modagaskar', 'Ressia', 'Brish', 'Osh', 'Jalalabad'];
// function func(elem){return elem.length > 5};
// var newArr = arr.filter(func);
// alert(newArr); 

// Задание №9
// Дан массив с числами. Найдите сумму первых N элементов до первого нуля. Пример: [1, 2, 3, 0, 4, 5, 6] - суммируем первые 3 элемента, так как дальше стоит элемент с числом 0.
// Используйте метод reduce()

// let arr = [1, 2, 3, 0, 4, 5, 6];
// let answer = 0;
// let result = arr.reduce(function(sum, elem) {
// 	if (elem == 0) {
// 		answer = sum;
// 	} else {
// 		return sum + elem;
// 	}
// });
// if(answer == undefined){answer = result};
// alert(answer); 


// Задание №10
// Дан массив ["Это заголовок <h1>", "А это параграф <p>", "А это тег <div>"]
// Отразите текст из массива на странице в соответствующих тегах
// includes() и любой метод перебора массива
// т.е. на страничке должны появиться строки вместе с названиями тегов


// let arr10 = ["Это заголовок <h1>", "А это параграф <p>", "А это тег <div>"];
// arr10.forEach(item => {
//     if(item.includes('<h1>')){
//         document.write(`<h1> &lth1&gt${item} <h1>`)
//     }else if (item.includes('<p>')){
//         document.write(`<p> &ltp&gt${item} <p>`)
//     }else if (item.includes('<div>')){
//         document.write(`<div> &ltdiv&gt${item} <div>`)
//     }
// })


// Группа А=========================================================

// Задание №11
// Создайте новый массив, в который возвращается объект, составленный из значений вложенных массивов. Первые элемент массива - ключ, второй - значение.
// Используйте метод reduce()

// let data = [['a', 1], ['b', 2]];
// Вывод:
// {
//     'a': 1,
//     'b': 2
// }

// Задание №12
// дан двумерный массив
// let arr = [1,2, [4,5,6], [7,8]]
// выведите сумму всех элементов
// используйте reduce()

// Задание №13

// Дан массив состоящий из чисел, а также больших чисел(bigInt)
// Сумма всех цифр внутри числа, будет равна ASCII номеру определенной буквы.
// Пример:
// Ввод: let arr = [584131398786538461382741, 444521974525439455955, 71415168525426614834414214, 353238892594759181769, 48955328774167683152, 77672648114592331981342373, 5136831421236, 83269359618185726749, 2554892676446686256, 959958531366848121621517, 4275965243664397923577, 616142753591841179359, 121266483532393851149467, 17949678591875681]
//Вывод: в данном массиве зашифрована фраза - secret-message

// Раскодируйте фразу из массива ниже, используя map(), reduce()

// let arr = [
//     436450905757958151n,
//     11258783099996076460563n,
//     4271648547630677847351n,
//     618958267230480336590096n,
//     8758497946868448n,
//     522605576771949556944035n,
//     85066202249185099169760853n,
//     3086832757126n,
//     996521n,
//     927960635227601913n,
//     70078548120507149395588131n,
//     860837n,
//     358019731380917077399530102n,
//     62039800138267504261751603735n,
//     9750891479584997n,
//     918662n,
//     65327012964727042243717157n,
//     232087621279086322105118092n,
//     5211980170217154619622689642n,
//     6124973n,
//     86411816655484980296n,
//     91315560975533164408650219064n,
//     622020778302918273675482n,
//     810589171448852275032504861n,
//     444121583n,
//     33430239609682594751236n,
//     185623925354270032483460275221n,
//     7868767990756882313n,
//     4657463770033462099583n,
//     242033234081n,
//     522740644841373392917114n,
//     406008262691140304161593616100211362n,
//     568510122451787635388154655n,
//     5578397767326623013150481034n,
//     555640745510125078573784n,
//     406901355248415157672497n,
//     88558845201718547978n,
//     68574135720461824293161323n,
//     3676244n,
//     5042122205391979386680691n,
//     73395510612321053412266453664n,
//     24406073369262079776782n,
//     7422295137177317668814n,
//     158882n,
//     372566226366055183434756092n,
//     217801045092586396416854n,
//     387064459629162985218n,
//     27921983810840242015693511824n,
//     1644125056804n,
//     5379171082171129383n,
//     6750612981549243200995103n,
//     32412900856868128268020217613n,
//     479858287n,
//     6096272n,
//     454320294201191419460256n,
//     293398766039677586n,
//     30652983692459763541n,
//     82882672765594704813185n,
//     92583381n,
//     43343754351489585033783532n,
//     1299335n,
//     254078966874894178015532n,
//     129278851477373713752221n,
//     1324382354724457193161741158451n,
//     341401685n,
//     5457110999302082592077217n,
//     95066071456345657725316571n,
//     743409212n,
//     988517320507018868694n,
//     190928581430131876371881026012n,
//     8690621n,
//     9915740590818375796n,
//     13374845638424941804172067n,
//     4729159847810460863472n,
//     4416521647100742520187956283n,
//     29941458499424421700564n,
//     7523244131n,
//     224344126317666108716556700814n,
//     529253721025532996042429751n,
//     867344n,
//     11654415332705915327940693482n,
//     48018003472901929981390383n,
//     2866645196951814499551n,
//     20726910437738542761337334n,
// ];


// let res = arr.map (elem => {
//     elem = elem.toString().split('')
//     return elem.reduce((total, num) => {
//         return total + Number(num)
//     }, 0)
// }) 

// console.log(res);


// res = res.map (elem =>{
//     return String.fromCharCode(elem)

// })
// console.log(res);
// console.log(res.join(''));


// Задание №14
// Напишите функцию, которая может превратить текст в нумеронимы
// Пример:
// Ввод:
// const input =
// 'Сложный путь у программиста, Только горе - не беда, Если выбрал путь тернистый - То тогда тебе - сюда!';

// Вывод:
// С5й п2ь у п11, Т4о г2е - не б3, Е2и в4л п2ь т7й - То т3а т2е - с3!
// т.е. каждое слово, если оно длинее 4х букв, превращается в нумероним, внутри которого, между крайними буквами - будет число, обозначающее количество букв между крайними буквами

// const input = 'Сложный путь у программиста, Только горе - не беда, Если выбрал путь тернистый - То тогда тебе - сюда!';

// const createNumeronym = word => word [0] + (word.length -2 ) + word [word.length -1];

// const some = input
// .split(' ')
// .map(function(word){
//     if (word.length >= 4 ){
//         return createNumeronym(word)
//     }
//     return word
// })
// .join(' ')

// console.log(some);



// Задание №15
// Дан массив nums = []
// Напишите функцию, которая будет возвращать массив, в котором указано сколько есть чисел в массиве меньше, чем сравниваемое
// Используйте метод map()
// Пример №1:
// Ввод: nums = [8,1,2,2,3]
// Вывод: [4,0,1,1,3]

// Пример №2:
// Ввод: nums = [6,5,4,8]
// Вывод: [2,1,0,3]
































// Методы массивов. Задачи на закрепление.

// Задание № 1
// Написать функцию, которая получает в
// качестве параметра массив, затем перебирает
// все его элементы и выводит на экран сам
// элемент, а также тип данных элемента - числовой, не числовой
// Пример: [‘Молоко’, 77, 11, ‘Мед’, -88];
// Ответ: 	Молоко-не число
// 77-число и т.д.

// let arr = ['Молоко', 77, 11, 'Мед', -88]
// arr.forEach(item => (typeof item == 'string')? console.log(item + " not a number"): console.log(item + ' is number') )

// Задание № 2
// Напишите функцию, определяющую,
// присутствует ли заданный элемент в массиве.
// В качестве результата работы функции можно
// выдавать логическое значение true и индекс
// этого элемента, если элемент найден,
// и false — в противном случае.
// Пример: [‘Молоко’, 20, 40, “дом”, 30]
// Ввод: 40
// Вывод: true 2

// let a = prompt('Enter number or word')
// function booler (a){
//     let arr2 = ['Молоко', 77, 11, 'Мед', -88]
//     arr2.forEach((element,index) => {
//     if(element == a) {
//         console.log(true, index);
//     } 
  
//     });
// }
// booler(a)

// Задание № 3
// Найдите сумму чисел в массиве
// методом forEach(), методом reduce() и map().
// Пример: [5, 6, 7, 8, 9]
// Ответ: 35

// let num = [5, 6, 7, 8, 9];
// let numFor =  num.reduce((a, b) => {
//     return (a + b );
// })
// console.log(numFor);

// Задание № 4
// Оставьте в массиве только те строки,
// длина которых равна или больше 5-ти символов.
// Используйте filter().
// Пример: [‘aaa’, ‘aaaqqq', ‘zzzqq’, ‘zz’, ‘qsaa’, ‘q’, ‘az’]
// Ответ:  [‘aaaqqq', ‘zzzqq’]


// let arr = ['aaa', 'aaaqqq', 'zzzqq', 'zz', 'qsaa', 'q', 'az'];
// function func(elem){return elem.length > 4};
// let newArr = arr.filter(func);
// alert(newArr);  



// Задание № 5
// Дан массив, в нем могут быть обычные
// элементы и подмассивы.
// Оставьте в нем только подмассивы.
// Используйте filter().
// Пример: [1, 2, [3, 4], 5,[6, 7]]
// Ответ:  [[3, 4],[6, 7]]

// let arr = [1, 'string', [3, 4], 5, [6, 7]];
// function func(elem){return Array.isArray(elem)};
// let newArr = arr.filter(func);
// alert(newArr);


// Задание № 6
// Напишите функцию которая принимает в аргументы массив и элемент массива, и удаляет переданный элемент
// из массива.
// Например: remove_array_element([2, 5, 9, 6], 5);
// Вывод: [2, 9, 6]

// let num = remove_array_element([2, 5, 9, 6], 5);
// function remove_array_element(arr,num) {
//     let store = [];
//     for (let i = 0; i <arr.length; i++){
//         if(arr[i] != num);
//     }
//     return store
// }
// document.writeln(store);

// Задание № 7
// Дан массив с числами. Найдите сумму
// первых N элементов до первого нуля.
// Например здесь суммируем первые 3 элемента, так как
// дальше стоит элемент с числом 0.
// Пример: [1, 2, 3, 0, 4, 5, 6]
// Ответ: 6
// Используйте slice() и reduce().

// let arr = [1, 2, 3, 0, 4, 5, 6];
// let answer = 0;
// let result = arr.reduce(function(sum, elem) {
// 	if (elem == 0) {
// 		answer = sum;
// 	} else {
// 		return sum + elem;
// 	}
// });
// if(answer == undefined){answer = result};
// alert(answer); 

// Задание № 8
// Дан массив с числами. Напишите функцию, которая
// вычисляет сколько элементов с начала массива
// надо сложить, чтобы в сумме получилось 10?
// Пример:  [3, 1, 4, 2, 4, 5, 6]
// Ответ: 4


// Задание № 9
// Напишите функцию, которая принимает массив и состоящий из строк
// и возвращает новый массив состояший только из первых и последних
// букв каждой строки
// Например: ['hi', 'goodbye', 'smile']
// Вывод: ['hi', 'ge', 'se']


// Задание № 10
// Дан массив с числами. Вывести количество
// отрицательных чисел в этом массиве.
// Пример: [7, -1, -9, 0, 4, 5, -6]
// Ответ: 3

// Задание №11
// Напишите функцию shuffle(array), которая перемешивает
// (переупорядочивает случайным образом) элементы массива.
// Каждый вызов данной функции должен возвращать массив с
// разным порядком элементов массива.
// Пример: дан массив [4, 8, 12, 16]
// Вывод: [8, 16, 4, 12], следующий запуск выдаст также
// другой порядок элементов - [12, 4, 16, 8]



// Задание №12
// Напишите функцию которая возвращает массив,
// содержащий только уникальные элементы.
// Пример: ['apple', 'orange', 'apple', 'pear']
// Вывод: ['apple', 'orange', 'pear']


// function unique(arr) {
//     let result = [];
  
//     for (let str of arr) {
//       if (!result.includes(str)) {
//         result.push(str);
//       }
//     }
  
//     return result;
//   }
  
//   let strings = ['apple', 'orange', 'apple', 'pear']
  
//   alert( unique(strings) ); 


// Задание №13
// Напишите функцию которая принимает строку и возвращает объект с ключами в виде
// гласных, и значениями ключей в виде чисел, обозначающих сколько раз данная
// гласная встречается в заданной строке. Функция не должна учитывать регистр, т.е
// должна учитывать и заглавные и строчные буквы.
// Использовать forEach
// Например: 'I Am awesome and so are you'
// Вывод: {i: 1, a: 4, e: 3, o: 3, u: 1};

// Задание №14
// Напишите функцию которая принимает в качестве аргумента массив состоящий из объектов
// (с элементами в виде ключей и значений), а также две новые строки.
// И добавляет новую пару ключ и значение, состоящих из указанных строк,
// к каждому из объектов массива
// Например: myFunc([{name: 'Elie'}, {name: 'Tim'}, {name: 'Matt'}, {name: 'Colt'}], 'title', 'instructor')
// Вывод:[{name: 'Elie', title:'instructor'},
// {name: 'Tim', title:'instructor'},
// {name: 'Matt', title:'instructor'},
// {name: 'Colt', title:'instructor'}]

// Задание №15
// Вам даны два массива состоящих из чисел, длина массивов >= 1,
// напишите функцию которая возвращает true если сумма квадратов
// каждого элемента в первом массиве больше чем сумма кубов каждого
// элемента второго массива.
// Использовать метод reduce()

// Например: [4, 5, 6], [1, 2, 3]
// Вывод: true, т.к (4 ** 2 + 5 ** 2 + 6 ** 2) > (1 ** 3 + 2 ** 3 + 3 ** 3)





















// Деструктуризация. Домашняя работа.

// Группа С =======================================================
// Задание №1
// Дан массив ["Julius", "Caesar", "Consul", "of the Roman Republic"]
// Вам надо поместить в переменную
// firstName 1-элемент массива, а в
// переменную titul  3-элемент.


// let names =  ["Julius", "Caesar", "Consul", "of the Roman Republic"]

// let [firstName,,titul , ...arr] = names;
// console.log(firstName,titul, ...arr);

// Задание №2
// Дана строка `Albert Einstein`.
// Поместите в переменную firstName первое слово,
// в переменную lastName второе слово.


// let name = ['Albert Einstein']
// let [firstName, lastName] = ["Albert", "Einstein"] ;
// console.log(firstName);
// console.log(lastName);


// Задание №3
// Создайте объект let obj = {};
// В свойство firstName поместите первое
// слово из задания №2
// В свойство lastName поместите второе
// слово из задания №2


// let obj = {
//     firstName:'Albert',
//     lastName: 'Einstein'
// };

// let {firstName,lastName} = obj;
// console.log(firstName,lastName);

// Задание №4
// Дан объект {name: 'Петр', 'surname': 'Петров', 'age': '20 лет'}.
// Запишите соответствующие значения в переменные name, surname и age

// let subName = {name: 'Петр', 'surname': 'Петров', 'age': '20 лет'};
// let {name,{surname}, } = subName;

// console.log(name) = subName;



// Задание №5
// Дан объект: { hello: "World", console: "log", java: "script" }
// Поместите в переменные, первые два свойства.
// Следующие два выведите в консоль. Используйте оператор ...rest (spread).

// let subStr = { hello: "World", console: "log", java: "script" };

// let 

// let {hello,console, ...rest} = subStr;
// console.log(hello,console, ...rest);

// Группа B =======================================================

// Задание №6
// Вам нужно поменять местами значения
// переменных.
// let a = 0;
// let b = 1;
// Пример результата:
// console.log(a, b); // 1, 0

// let a = 0;
// let b = 1;
// [a, b] = [b, a];
// console.log(`${a}, ${b}`);


// Задание №7
// Дан массив ['первый', 'второй'].
// Запишите второй элемент этого массива в переменную elem2, третий - в переменную elem3.
// Если в массиве нет третьего элемента - запишите в переменную elem3 значение 'eee',
// а если нет второго - в переменную elem2 запишите значение 'bbb'.
// Первый элемент никуда записывать не надо.


// let nameSub = ['Aiken' ];

// let [
//     ,
//     elem2 ='bbb',
//     elem3 ='eee'

// ] = nameSub;

// console.log(elem2,elem3);


// Задание №8
// Дан объект {name: 'Jack', age: '22', hobbys: [football, swimming]}
// Запишите в переменные hobby1 и hobby2 слова football и swimming соответственно.


// let hobby = {name: 'Jack', age: '22', hobbys: [football, swimming]};

// let {
//     name,
//     age,
//     hobbys: [ hobby1,hobby2
// ]} = hobby;
// console.log(name,age,hobby1,hobby2);



// Задание №9
// Дан объект {name: 'Петр', 'surname': 'Петров', 'age': '20 лет', }.
// Запишите соответствующие значения в переменные name, surname и age.
// Сделайте так, чтобы, если какое-то значение не задано - оно принимало следующее значение по умолчанию: {name: 'Аноном', 'surname': 'Анонимович', 'age': '? лет'}



// let names = {name: 'Петр', 'surname': 'Петров', 'age': '20 лет', };
// let {name = 'Аноном',surname = 'Анонимович',age = '? лет'} = names;
// console.log(names,surname,age);


// Задание №10
// Перезапишите все свойства объекта person данными из массива info.


// let info = ['Sam', 'Christenson', 22];
// let person = {
//     name: '',
//     surname: '',
//     age: null
// };



// Группа А =======================================================

// Задание №11
// Дан объект {name: 'John', 'age': '22', }.
// Запишите соответствующие значения в переменные name, и age.
// Сделайте так, чтобы, если какое-то значение не задано - оно принимало введенное значение с prompt.

// Задание №12
// Переделайте следующую функцию через деструктуризацию.
// Сделайте так, чтобы если какое-либо из значений отсутствует, то переменной присваивалось значение по умолчанию.
// function func(person) {
//     let name = person.n;
//     let surname = person.s;
//     let age = person.a
//     console.log(name, surname, age);
// }
// func({ n: 'Luck', a: 22 });

// Задание №13
// Дан объект {"Sam": 22,"Kate": 28,"Luck": 16}.
// Напишите функцию, которая возвращает имя самого старшего студента.
// Для решения задачи используйте Object.entries и деструктурирование.
// let students = {
//     "Sam": 22,
//     "Kate": 28,
//     "Luck": 16
// };

// Задание №14
// Дан объект { size: { width: 100, height: 200 }, items: ["Cake", "Donut"], extra: true}.
// Деструктуризуйте все свойства и элементы данного объекта, включая вложенные объекты и массивы и выведите в консоли.

// Задание №15
// Дан массив [[15, 15.1, 15.2], [16,16.1,16.2], [17,17.1,17.2]].
// Используя цикл for...of и деструктуризацию вывести в консоль все числа вложенных массивов.
// Пример ввода:
// [[15, 15.1, 15.2], [16,16.1,16.2], [17,17.1,17.2]]
// Пример вывода:
// Первое - 15, второе - 15.1, третье - 15.2
// Первое - 16, второе - 16.1, третье - 16.2
// и т.д





// function someFunc () {
//     return Date.now() + '-visit'
// }

// let [firstName,lastName=someFunc()] = ['Argen'];
// console.log(firstName);
// console.log(lastName);


// let obj = {
//     size: {
//         width:100,
//         hight:50,
//     },
//     items:['Cake', 'Apple']
// }
// let {title ='Book', size:{width,hight}, items:[item1,item2]} = obj
// console.log(title);
// console.log(width);
// console.log(hight);
// console.log(item1);
// console.log(item2);



let obj = {
    name: 'Jack',
    age: '22',
    hobbys:[
        'football',
        'swimming'
    ]
}

let {
    hobbys:[
        hobby1,
        hobby2
    ]
}= obj
console.log(hobby1,hobby2);